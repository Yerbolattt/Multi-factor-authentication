@model InputQuizViewModel
@{
    ViewData["Title"] = "Display";
    int questionCount;
}
    <form id="quiz" method="post">
        @* Name *@
        <div class="form-group flex-grow-1 d-inline">
            <nav class="navbar navbar-expand-lg navbar-dark bg-neutral mt-4">
                <div class="container">
                    <h4>Quiz Name</h4>
                    <button class="navbar-toggler collapsed bg-primary"
                            type="button" data-toggle="collapse"
                            data-target="#navbarNavDropdown"
                            aria-controls="navbarNavDropdown"
                            aria-expanded="false"
                            aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    <div class="navbar-collapse text-center collapse" id="navbarNavDropdown">
                        <ul class="navbar-nav ml-auto">
                            <li class="nav-item m-1">
                                <a id="continue" class="btn btn-outline-primary offset-md-4 col-md-4 mt-2" asp-action="QuestionInput" asp-controller="Question">Add Question</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </nav>
            <input type="text" class="form-control form-control-lg flex-grow-1 mr-2 d-inline text-truncate" value="@Model.Name">
        </div>

        @* Description *@
        <div class="form-group flex-grow-1 d-inline">
            <nav class="navbar navbar-expand-lg navbar-dark bg-neutral mt-4 p-2">
                <div class="container">
                    <h5>Description</h5>
                </div>
            </nav>
            <textarea wrap="hard" class="form-control form-control-lg flex-grow-1 mr-2 d-inline" style="height: 112px;" asp-for="@Model.Description"></textarea>
        </div>

        @* questions *@
        @foreach (var question in Model.Questions.Where(x => !x.IsDeleted))
        {

            questionCount = Model.Questions.IndexOf(question) + 1;
            question.Count = questionCount;
            @await Html.PartialAsync("_QuestionDetailsPartial", question);
        }

        @* activationDate *@
        <div class="form-group flex-grow-1 d-inline">
            <nav class="navbar navbar-expand-lg navbar-dark bg-light mt-4 p-2">
                <div class="container">
                    <h4>Activation Date</h4>
                </div>
            </nav>
            <input type="text" class="form-control form-control-lg flex-grow-1 mr-2 d-inline text-truncate" value="@Model.ActivationDate.ToString().Split()[0]">
        </div>
        @* Duration *@
        <div class="form-group flex-grow-1 d-inline">
            <nav class="navbar navbar-expand-lg navbar-dark bg-light mt-4 p-2">
                <div class="container">
                    <h4>Duration</h4>
                </div>
            </nav>
            <input type="number" class="form-control form-control-lg flex-grow-1 mr-2 d-inline text-truncate" value="@Model.Duration">
        </div>
        <a id="continue" class="btn btn-outline-primary offset-md-4 col-md-4 mt-2" asp-action="QuestionInput" asp-controller="Question">Continue</a>
        <button type="submit" class="btn btn-primary offset-md-4 col-md-4 mt-3 text-white" asp-action="Quiz" asp-controller="Save">Save Qiuz</button>
    </form>

