@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item mx-2">
        <a class="btn btn-outline-light" asp-action="Logout" asp-controller="Account">
            Log out
        </a>
    </li>
}
else
{
    <li class="nav-item">
        <a class="btn btn-outline-light" asp-action="Register" asp-controller="Account">
            Register
        </a>
    </li>
    <li class="nav-item mx-2">
        <a class="btn btn-outline-light" asp-action="Login" asp-controller="Account">
            Log in
        </a>
    </li>
    //temporary
    <li class="nav-item mx-2">
        <a class="btn btn-outline-light" asp-action="Profile" asp-controller="Account">
            Profile
        </a>
    </li>
}


@*<ul class="navbar-nav">
        @if (SignInManager.IsSignedIn(User))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name!</a>
            </li>
            <li class="nav-item">
                <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
                </form>
            </li>
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
            </li>
        }
    </ul>*@
